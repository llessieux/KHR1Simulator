//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.IO.Compression;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using contractmodel = Microsoft.Dss.Services.ContractModel;
using io = System.IO;
using pxengine = Microsoft.Robotics.Simulation.Engine.Proxy;
using reflection = System.Reflection;
using simulated = Microsoft.Robotics.Services.KHR1.Simulated.Proxy;

[assembly: ContractNamespace(simulated.Contract.Namespace, ClrNamespace="Microsoft.Robotics.Services.KHR1.Simulated.Proxy")]


namespace Microsoft.Robotics.Services.KHR1.Simulated.Proxy
{
    
    /// <summary>
    /// Contract
    /// </summary>
    [XmlTypeAttribute(IncludeInSchema=false)]
    public sealed class Contract
    {
        /// <summary>
        /// Namespace
        /// </summary>
        public const string Namespace = "http://schemas.microsoft.com/robotics/simulation/services/2006/07/simulatedkhr1.h" +
            "tml";
        /// The Dss Service dssModel Contract(s)
        public static List<contractmodel.ServiceSummary> ServiceModel()
        {
            List<contractmodel.ServiceSummary> services = null;
            io.Stream stream = null;
            try
            {
                string Resource = @"Microsoft.Robotics.Services.KHR1.Simulated.Resources.DssModel.dss";
                stream = reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream(Resource);
                GZipStream compressionStream = new GZipStream(stream, CompressionMode.Decompress, true);
                XmlSerializer serializer = new XmlSerializer(typeof(List<contractmodel.ServiceSummary>));
                services = (List<contractmodel.ServiceSummary>)serializer.Deserialize(compressionStream);
                compressionStream.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error retrieving Dss Service Model: ", ex.Message);
            }
            finally
            {
                if (stream != null)
                {
                    stream.Close();
                    stream = null;
                }
            }
            return services;

        }
    }
    /// <summary>
    /// Kondo_KHR1
    /// </summary>
    [DataContract()]
    [XmlRootAttribute("Kondo_KHR1", Namespace="http://schemas.microsoft.com/robotics/simulation/services/2006/07/simulatedkhr1.h" +
        "tml")]
    public class Kondo_KHR1 : pxengine.VisualEntity
    {
        public void CopyTo(Kondo_KHR1 target)
        {
            base.CopyTo(target);
        }
        public override object Clone()
        {
            Kondo_KHR1 newobj = new Kondo_KHR1();
            CopyTo(newobj);
            return newobj;

        }
    }
    /// <summary>
    /// My Box Arm Link Entity
    /// </summary>
    [DataContract()]
    [XmlRootAttribute("MyBoxArmLinkEntity", Namespace="http://schemas.microsoft.com/robotics/simulation/services/2006/07/simulatedkhr1.h" +
        "tml")]
    public class MyBoxArmLinkEntity : pxengine.VisualEntity
    {
        public void CopyTo(MyBoxArmLinkEntity target)
        {
            base.CopyTo(target);
        }
        public override object Clone()
        {
            MyBoxArmLinkEntity newobj = new MyBoxArmLinkEntity();
            CopyTo(newobj);
            return newobj;

        }
    }
    /// <summary>
    /// KHR1 Body Entity
    /// </summary>
    [DataContract()]
    [XmlRootAttribute("KHR1BodyEntity", Namespace="http://schemas.microsoft.com/robotics/simulation/services/2006/07/simulatedkhr1.h" +
        "tml")]
    public class KHR1BodyEntity : MyBoxArmLinkEntity
    {
        public void CopyTo(KHR1BodyEntity target)
        {
            base.CopyTo(target);
        }
        public override object Clone()
        {
            KHR1BodyEntity newobj = new KHR1BodyEntity();
            CopyTo(newobj);
            return newobj;

        }
    }
}
